//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.312
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MySql.Data.MySqlClient {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;

#if CF
        private const string resName = "MySql.Data.CF.Properties.Resources";
#else
        private const string resName = "MySql.Data.MySqlClient.Properties.Resources";
#endif

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager(resName, typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Improper MySqlCommandBuilder state: adapter is null.
        /// </summary>
        internal static string AdapterIsNull {
            get {
                return ResourceManager.GetString("AdapterIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Improper MySqlCommandBuilder state: adapter&apos;s SelectCommand is null.
        /// </summary>
        internal static string AdapterSelectIsNull {
            get {
                return ResourceManager.GetString("AdapterSelectIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version string not in acceptable format.
        /// </summary>
        internal static string BadVersionFormat {
            get {
                return ResourceManager.GetString("BadVersionFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The buffer cannot be null.
        /// </summary>
        internal static string BufferCannotBeNull {
            get {
                return ResourceManager.GetString("BufferCannotBeNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Buffer is not large enough.
        /// </summary>
        internal static string BufferNotLargeEnough {
            get {
                return ResourceManager.GetString("BufferNotLargeEnough", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Canceling an executing query requires MySQL 5.0 or higher..
        /// </summary>
        internal static string CancelNeeds50 {
            get {
                return ResourceManager.GetString("CancelNeeds50", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Canceling an active query is only supported on MySQL 5.0.0 and above. .
        /// </summary>
        internal static string CancelNotSupported {
            get {
                return ResourceManager.GetString("CancelNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MySqlCommandBuilder does not support multi-table statements.
        /// </summary>
        internal static string CBMultiTableNotSupported {
            get {
                return ResourceManager.GetString("CBMultiTableNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MySqlCommandBuilder cannot operate on tables with no unique or key columns.
        /// </summary>
        internal static string CBNoKeyColumn {
            get {
                return ResourceManager.GetString("CBNoKeyColumn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chaos isolation level is not supported.
        /// </summary>
        internal static string ChaosNotSupported {
            get {
                return ResourceManager.GetString("ChaosNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The CommandText property has not been properly initialized..
        /// </summary>
        internal static string CommandTextNotInitialized {
            get {
                return ResourceManager.GetString("CommandTextNotInitialized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The connection is already open..
        /// </summary>
        internal static string ConnectionAlreadyOpen {
            get {
                return ResourceManager.GetString("ConnectionAlreadyOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection unexpectedly terminated..
        /// </summary>
        internal static string ConnectionBroken {
            get {
                return ResourceManager.GetString("ConnectionBroken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection must be valid and open.
        /// </summary>
        internal static string ConnectionMustBeOpen {
            get {
                return ResourceManager.GetString("ConnectionMustBeOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The connection is not open..
        /// </summary>
        internal static string ConnectionNotOpen {
            get {
                return ResourceManager.GetString("ConnectionNotOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The connection property has not been set..
        /// </summary>
        internal static string ConnectionNotSet {
            get {
                return ResourceManager.GetString("ConnectionNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Count cannot be negative.
        /// </summary>
        internal static string CountCannotBeNegative {
            get {
                return ResourceManager.GetString("CountCannotBeNegative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SetLength is not a valid operation on CompressedStream.
        /// </summary>
        internal static string CSNoSetLength {
            get {
                return ResourceManager.GetString("CSNoSetLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is already an open DataReader associated with this Connection which must be closed first..
        /// </summary>
        internal static string DataReaderOpen {
            get {
                return ResourceManager.GetString("DataReaderOpen", resourceCulture);
            }
        }
        
        internal static string DistributedTxnNotSupported {
            get {
                return ResourceManager.GetString("DistributedTxnNotSupported", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Error creating socket connection.
        /// </summary>
        internal static string ErrorCreatingSocket {
            get {
                return ResourceManager.GetString("ErrorCreatingSocket", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to From index and length use more bytes than from contains.
        /// </summary>
        internal static string FromAndLengthTooBig {
            get {
                return ResourceManager.GetString("FromAndLengthTooBig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to From index must be a valid index inside the from buffer.
        /// </summary>
        internal static string FromIndexMustBeValid {
            get {
                return ResourceManager.GetString("FromIndexMustBeValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retrieving procedure metadata for {0} from server..
        /// </summary>
        internal static string HardProcQuery {
            get {
                return ResourceManager.GetString("HardProcQuery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value has an unsupported format..
        /// </summary>
        internal static string ImproperValueFormat {
            get {
                return ResourceManager.GetString("ImproperValueFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An incorrect response was received from the server..
        /// </summary>
        internal static string IncorrectTransmission {
            get {
                return ResourceManager.GetString("IncorrectTransmission", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Index and length use more bytes than to has room for.
        /// </summary>
        internal static string IndexAndLengthTooBig {
            get {
                return ResourceManager.GetString("IndexAndLengthTooBig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Index must be a valid position in the buffer.
        /// </summary>
        internal static string IndexMustBeValid {
            get {
                return ResourceManager.GetString("IndexMustBeValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Procedure or function &apos;{0}&apos; cannot be found in database &apos;{1}&apos;..
        /// </summary>
        internal static string InvalidProcName {
            get {
                return ResourceManager.GetString("InvalidProcName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keyword does not allow null values..
        /// </summary>
        internal static string KeywordNoNull {
            get {
                return ResourceManager.GetString("KeywordNoNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keyword not supported..
        /// </summary>
        internal static string KeywordNotSupported {
            get {
                return ResourceManager.GetString("KeywordNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When MySqlCommandBuilder.ReturnGeneratedIdentifiers is true, MySqlCommand.UpdatedRowSource must be set to None..
        /// </summary>
        internal static string MixingUpdatedRowSource {
            get {
                return ResourceManager.GetString("MixingUpdatedRowSource", resourceCulture);
            }
        }

        internal static string MultipleConnectionsInTransactionNotSupported
        {
            get {
                return ResourceManager.GetString("MultipleConnectionsInTransactionNotSupported", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to NamedPipeStream does not support seeking.
        /// </summary>
        internal static string NamedPipeNoSeek {
            get {
                return ResourceManager.GetString("NamedPipeNoSeek", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NamedPipeStream doesn&apos;t support SetLength.
        /// </summary>
        internal static string NamedPipeNoSetLength {
            get {
                return ResourceManager.GetString("NamedPipeNoSetLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid attempt to call NextResult when the reader is closed..
        /// </summary>
        internal static string NextResultIsClosed {
            get {
                return ResourceManager.GetString("NextResultIsClosed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When calling stored procedures and &apos;Use Procedure Bodies&apos; is false, all parameters must have their type explicitly set..
        /// </summary>
        internal static string NoBodiesAndTypeNotSet {
            get {
                return ResourceManager.GetString("NoBodiesAndTypeNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Nested transactions are not supported..
        /// </summary>
        internal static string NoNestedTransactions {
            get {
                return ResourceManager.GetString("NoNestedTransactions", resourceCulture);
            }
        }

        internal static string ObjectDisposed
        {
            get
            {
                return ResourceManager.GetString("ObjectDisposed", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to  Offset cannot be negative.
        /// </summary>
        internal static string OffsetCannotBeNegative {
            get {
                return ResourceManager.GetString("OffsetCannotBeNegative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Offset must be a valid position in buffer.
        /// </summary>
        internal static string OffsetMustBeValid {
            get {
                return ResourceManager.GetString("OffsetMustBeValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter &apos;{0}&apos; has already been defined..
        /// </summary>
        internal static string ParameterAlreadyDefined {
            get {
                return ResourceManager.GetString("ParameterAlreadyDefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter cannot have a negative value.
        /// </summary>
        internal static string ParameterCannotBeNegative {
            get {
                return ResourceManager.GetString("ParameterCannotBeNegative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter cannot be null.
        /// </summary>
        internal static string ParameterCannotBeNull {
            get {
                return ResourceManager.GetString("ParameterCannotBeNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter is invalid..
        /// </summary>
        internal static string ParameterIsInvalid {
            get {
                return ResourceManager.GetString("ParameterIsInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter &apos;{0}&apos; must be defined..
        /// </summary>
        internal static string ParameterMustBeDefined {
            get {
                return ResourceManager.GetString("ParameterMustBeDefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password must be valid and contain length characters.
        /// </summary>
        internal static string PasswordMustHaveLegalChars {
            get {
                return ResourceManager.GetString("PasswordMustHaveLegalChars", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This category includes a series of counters for MySQL..
        /// </summary>
        internal static string PerfMonCategoryHelp {
            get {
                return ResourceManager.GetString("PerfMonCategoryHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .NET Data Provider for MySQL.
        /// </summary>
        internal static string PerfMonCategoryName {
            get {
                return ResourceManager.GetString("PerfMonCategoryName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of times a procedures metadata had to be queried from the server..
        /// </summary>
        internal static string PerfMonHardProcHelp {
            get {
                return ResourceManager.GetString("PerfMonHardProcHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hard Procedure Queries.
        /// </summary>
        internal static string PerfMonHardProcName {
            get {
                return ResourceManager.GetString("PerfMonHardProcName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of times a procedures metadata was retrieved from the client-side cache..
        /// </summary>
        internal static string PerfMonSoftProcHelp {
            get {
                return ResourceManager.GetString("PerfMonSoftProcHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Soft Procedure Queries.
        /// </summary>
        internal static string PerfMonSoftProcName {
            get {
                return ResourceManager.GetString("PerfMonSoftProcName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to same name are not supported..
        /// </summary>
        internal static string ProcAndFuncSameName {
            get {
                return ResourceManager.GetString("ProcAndFuncSameName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Packets larger than max_allowed_packet are not allowed..
        /// </summary>
        internal static string QueryTooLarge {
            get {
                return ResourceManager.GetString("QueryTooLarge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reading from the stream has failed..
        /// </summary>
        internal static string ReadFromStreamFailed {
            get {
                return ResourceManager.GetString("ReadFromStreamFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Socket streams do not support seeking.
        /// </summary>
        internal static string SocketNoSeek {
            get {
                return ResourceManager.GetString("SocketNoSeek", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retrieving procedure metadata for {0} from procedure cache..
        /// </summary>
        internal static string SoftProcQuery {
            get {
                return ResourceManager.GetString("SoftProcQuery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stored procedures are not supported on this version of MySQL.
        /// </summary>
        internal static string SPNotSupported {
            get {
                return ResourceManager.GetString("SPNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The stream has already been closed.
        /// </summary>
        internal static string StreamAlreadyClosed {
            get {
                return ResourceManager.GetString("StreamAlreadyClosed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The stream does not support reading.
        /// </summary>
        internal static string StreamNoRead {
            get {
                return ResourceManager.GetString("StreamNoRead", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The stream does not support writing.
        /// </summary>
        internal static string StreamNoWrite {
            get {
                return ResourceManager.GetString("StreamNoWrite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timeout expired.  The timeout period elapsed prior to completion of the operation or the server is not responding..
        /// </summary>
        internal static string Timeout {
            get {
                return ResourceManager.GetString("Timeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to error connecting: Timeout expired.  The timeout period elapsed prior to obtaining a connection from the pool.  This may have occurred because all pooled connections were in use and max pool size was reached..
        /// </summary>
        internal static string TimeoutGettingConnection {
            get {
                return ResourceManager.GetString("TimeoutGettingConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to connect to any of the specified MySQL hosts..
        /// </summary>
        internal static string UnableToConnectToHost {
            get {
                return ResourceManager.GetString("UnableToConnectToHost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to execute stored procedure &apos;{0}&apos;..
        /// </summary>
        internal static string UnableToExecuteSP {
            get {
                return ResourceManager.GetString("UnableToExecuteSP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an error parsing the foreign key definition..
        /// </summary>
        internal static string UnableToParseFK {
            get {
                return ResourceManager.GetString("UnableToParseFK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to retrieve stored procedure metadata.  Either grant  SELECTprivilege to mysql.proc for this user or use &quot;use procedure bodies=false&quot; with  your connection string..
        /// </summary>
        internal static string UnableToRetrieveSProcData {
            get {
                return ResourceManager.GetString("UnableToRetrieveSProcData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unix sockets are not supported on Windows.
        /// </summary>
        internal static string UnixSocketsNotSupported {
            get {
                return ResourceManager.GetString("UnixSocketsNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Writing to the stream failed..
        /// </summary>
        internal static string WriteToStreamFailed {
            get {
                return ResourceManager.GetString("WriteToStreamFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter &apos;{0}&apos; is not found but a parameter with the name &apos;{1}&apos; is found. Parameter names must include the leading parameter marker..
        /// </summary>
        internal static string WrongParameterName {
            get {
                return ResourceManager.GetString("WrongParameterName", resourceCulture);
            }
        }
    }
}
